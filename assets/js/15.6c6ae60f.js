(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{166:function(_,t,v){"use strict";v.r(t);var i=v(0),a=Object(i.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var _=this,t=_.$createElement,v=_._self._c||t;return v("div",{staticClass:"content"},[v("h2",{attrs:{id:"常见的数据结构-解决方案"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常见的数据结构-解决方案","aria-hidden":"true"}},[_._v("#")]),_._v(" 常见的数据结构(解决方案)")]),_._v(" "),v("div",{staticClass:"tip custom-block"},[v("p",{staticClass:"custom-block-title"},[_._v("TIP")]),_._v(" "),v("p",[_._v("数据结构起源于程序设计，是用计算机来存储、组织数据的方式。数据结构不是使我们学会编码，而是为我们提供一种编程的思路")]),_._v(" "),v("ul",[v("li",[_._v("广义 数据结构 = 数据存储 + 算法")]),_._v(" "),v("li",[_._v("狭义的说法： 数据结构 = 数据的存储")])])]),_._v(" "),v("div",{staticClass:"warning custom-block"},[v("p",{staticClass:"custom-block-title"},[_._v("WARNING")]),_._v(" "),v("p",[_._v("数据结构决定了数据存储的空间和事件效率问题")]),_._v(" "),v("h3",{attrs:{id:"场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#场景","aria-hidden":"true"}},[_._v("#")]),_._v(" 场景")]),_._v(" "),v("ul",[v("li",[_._v("读取多  （一次写入，多次读出）\n"),v("ul",[v("li",[_._v("写入数据持久化 -》 放到内存的缓存中 -》")])])]),_._v(" "),v("li",[_._v("写入    （服务器 - 日志）")]),_._v(" "),v("li",[_._v("读写都多 （）")])])]),_._v(" "),v("ul",[v("li",[_._v("栈、队列、链表")]),_._v(" "),v("li",[_._v("集合")])]),_._v(" "),v("h2",{attrs:{id:"前端常见的数据结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前端常见的数据结构","aria-hidden":"true"}},[_._v("#")]),_._v(" 前端常见的数据结构")]),_._v(" "),v("p",[_._v("四种数据结构")]),_._v(" "),v("ul",[v("li",[_._v("离散结构")]),_._v(" "),v("li",[_._v("线性结构 （连续的数组下标)")]),_._v(" "),v("li",[_._v("树状结构")]),_._v(" "),v("li",[_._v("图结构")])]),_._v(" "),v("h3",{attrs:{id:"简单的数据结构-（重点-）"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#简单的数据结构-（重点-）","aria-hidden":"true"}},[_._v("#")]),_._v(" 简单的数据结构 （重点 ）")]),_._v(" "),v("ul",[v("li",[_._v("有序的数据结构：")]),_._v(" "),v("li",[_._v("顺序表（数组）、链表(分散在内存中，不连续的 - 通过指针引用) 【线性表】")]),_._v(" "),v("li",[_._v("栈、队列、有序数据结构（存储空间小）【线性表的基础上】\n"),v("ul",[v("li",[_._v("栈一端操作 事件")]),_._v(" "),v("li",[_._v("队列 排队")])])]),_._v(" "),v("li"),_._v(" "),v("li",[_._v("无序的数据结构： 集合、字典、散队列（hash表）、无序数据结构省时间（读取时间快）")])]),_._v(" "),v("h3",{attrs:{id:"复杂数据结构（-堆重点-）"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#复杂数据结构（-堆重点-）","aria-hidden":"true"}},[_._v("#")]),_._v(" 复杂数据结构（ 堆重点 ）")]),_._v(" "),v("ul",[v("li",[_._v("树（查找 -找最短）、堆（ 内存 的管理上 ）、图")])]),_._v(" "),v("h2",{attrs:{id:"算法-！-数学-（数学是算法-）"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算法-！-数学-（数学是算法-）","aria-hidden":"true"}},[_._v("#")]),_._v(" 算法 ！= 数学 （数学是算法 ）")]),_._v(" "),v("ul",[v("li",[_._v("完成某个特定任务的过程")])]),_._v(" "),v("ol",[v("li",[_._v("有穷性： 算法必须在有限")]),_._v(" "),v("li",[_._v("确切性： 每一步有确切的定义")]),_._v(" "),v("li",[_._v("输入项： 有0或多个")]),_._v(" "),v("li",[_._v("熟出项： 有一个是多个输出")]),_._v(" "),v("li",[_._v("可行性：")])])])}],!1,null,null,null);a.options.__file="index.md";t.default=a.exports}}]);